{"version":3,"sources":["../src/server.js"],"names":[],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport DB_URL from './config'\r\n\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\nconst MongoClient = require('mongodb').MongoClient;\r\n\r\n// arrow functions\r\nconst server = app.listen(PORT, () => {\r\n  console.log(`app listening at http://localhost:${PORT}`);\r\n});\r\n\r\n\r\napp.use(bodyParser.urlencoded({extended: false}));\r\napp.use(bodyParser.json());\r\n\r\napp.use((req, res, next) => {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');\r\n    next();\r\n});\r\n\r\n\r\napp.get('/getInitialData', (req, res) => {\r\n    MongoClient.connect(DB_URL, (err, db) => {\r\n        if (err) {\r\n            return console.log('err', err);\r\n        }\r\n        \r\n        let data = {};\r\n        \r\n        let getUsers = new Promise(resolve => {\r\n            db.collection('users').find().toArray((err, results) => {\r\n                data.users = results;\r\n                resolve();\r\n            });\r\n        });\r\n        \r\n        let getDonations = new Promise(resolve => {\r\n            db.collection('donations').find().toArray((err, results) => {\r\n                data.donations = results;\r\n                resolve();\r\n            });\r\n        });\r\n        \r\n        let getEvents = new Promise(resolve => {\r\n            db.collection('events').find().toArray((err, results) => {\r\n                data.events = results;\r\n                resolve();\r\n            });\r\n        });\r\n        \r\n        Promise.all([\r\n            getEvents,\r\n            getUsers,\r\n            getDonations\r\n        ]).then(() => {\r\n            res.send(data);\r\n            db.close();\r\n        })\r\n    });\r\n});\r\n\r\napp.post('/addevent', (req, res) => {\r\n    console.log('req', req.body);\r\n    res.send('post addevent')\r\n});\r\n"]}