{"version":3,"sources":["../../src/actions/getUsers.js"],"names":[],"mappings":";;;;;;;;;;;6CAI6B,sCAAsC;;AAE5D,SAAS,QAAQ,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;AACnC,QAAI,YAAY,GAAG,EAAE,CAAC;;AAEtB,QAAI,QAAQ,GAAG,IAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AAClC,UAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,OAAO,EAAK;AACpD,wBAAY,CAAC,KAAK,GAAG,OAAO,CAAC;AAC7B,mBAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,QAAI,YAAY,GAAG,IAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AACtC,UAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,OAAO,EAAK;AACxD,wBAAY,CAAC,SAAS,GAAG,OAAO,CAAC;AACjC,mBAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,QAAI,SAAS,GAAG,IAAI,OAAO,CAAC,UAAA,OAAO,EAAI;AACnC,UAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,UAAC,GAAG,EAAE,OAAO,EAAK;AACrD,wBAAY,CAAC,MAAM,GAAG,OAAO,CAAC;AAC9B,mBAAO,EAAE,CAAC;SACb,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,WAAO,CAAC,GAAG,CAAC,CACR,SAAS,EACT,QAAQ,EACR,YAAY,CACf,CAAC,CAAC,IAAI,CAAC,YAAM;AACV,oBAAY,CAAC,WAAW,GAAG,EAAE,CAAC;AAC9B,oBAAY,CAAC,cAAc,GAAG,EAAE,CAAC;;AAEjC,yDAAa,GAAG,EAAE,GAAG,EAAE,YAAY,CAAC,CAAC;AACrC,UAAE,CAAC,KAAK,EAAE,CAAC;KACd,CAAC,CAAA;CACL","file":"getUsers.js","sourcesContent":["/**\r\n * Created by eugene on 07/11/17.\r\n */\r\n\r\nimport { handleRender } from './../intialLoad/actions/handleRender'\r\n\r\nexport function getUsers(req, db, res) {\r\n    let initialState = {};\r\n\r\n    let getUsers = new Promise(resolve => {\r\n        db.collection('users').find().toArray((err, results) => {\r\n            initialState.users = results;\r\n            resolve();\r\n        });\r\n    });\r\n\r\n    let getDonations = new Promise(resolve => {\r\n        db.collection('donations').find().toArray((err, results) => {\r\n            initialState.donations = results;\r\n            resolve();\r\n        });\r\n    });\r\n\r\n    let getEvents = new Promise(resolve => {\r\n        db.collection('events').find().toArray((err, results) => {\r\n            initialState.events = results;\r\n            resolve();\r\n        });\r\n    });\r\n\r\n    Promise.all([\r\n        getEvents,\r\n        getUsers,\r\n        getDonations\r\n    ]).then(() => {\r\n        initialState.pickedUsers = [];\r\n        initialState.loggedUserInfo = [];\r\n        \r\n        handleRender(req, res, initialState);\r\n        db.close();\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n"]}